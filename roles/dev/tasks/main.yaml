-   name: Install Packages
    become: "{{ ansible_distribution == 'Ubuntu' }}"
    package:
    # NOTE: 自動判定が上手くいかない場合があるので，強制的に上書きする
        use: "{{ 'homebrew' if ansible_os_family == 'Darwin' else ansible_pkg_mgr }}"
        name:
        -   "{{ 'emacs-nox' if ansible_distribution == 'Ubuntu'  else 'emacs' }}"
        -   zsh
        -   tmux
        -   keychain
        -   "{{ 'silversearcher-ag' if ansible_distribution == 'Ubuntu' else 'the_silver_searcher' }}"
        -   autojump
        -   clang
        -   git
        -   tig
        -   ripgrep
        -   flake8
        -   cmigemo
        -   colordiff
        -   mosh
        -   pipx
        -   python3-poetry
        -   black
        update_cache: yes

-   name: Install Packages (Ubuntu 22.04 or later)
    become: yes
    package:
        name:
        -   pre-commit
        -   duf
        -   plocate
        -   zoxide
    when: (ansible_distribution == 'Ubuntu') and ((ansible_distribution_version | float) >= 22.04)

-   name: Install Packages (Ubuntu 22.04)
    become: yes
    package:
        name:
        -   exa
    when: (ansible_distribution == 'Ubuntu') and (ansible_distribution_version == '22.04')

-   name: Install Packages (Ubuntu 24.04 or later)
    become: yes
    package:
        name:
        -   eza
    when: (ansible_distribution == 'Ubuntu') and ((ansible_distribution_version | float) >= 24.04)


-   name: Install Packages (pipx)
    become: no
    community.general.pipx:
        name: "{{ item }}"
    with_items:
    -   ruff
    -   pyright


-   name: Check Rye
    stat:
        path: ~/.rye/env
    register: rye

-   name: Install Rye
    shell: curl -sSf https://rye.astral.sh/get | RYE_INSTALL_OPTION="--yes" bash
    when: not rye.stat.exists

-   name: Setting dircolors
    become: no
    template:
        src: dircolors/dircolors.j2
        dest: ~/.dircolors

-   name: Setting tmux
    become: no
    template:
        src: tmux/tmux.conf.j2
        dest: ~/.tmux.conf

-   name: Install tmux plugin manager
    become: no
    git:
        repo: https://github.com/tmux-plugins/tpm
        dest: ~/.tmux/plugins/tpm

-   name: Setting SSH
    become: no
    blockinfile:
        path: ~/.ssh/config
        block: |
            Host *
                 ControlMaster               auto
                 ControlPath                 ~/.ssh/mux/%r@%h:%p
                 ControlPersist              10
                 ServerAliveInterval         60
                 ServerAliveCountMax         10
                 ForwardAgent                yes
                 Compression                 yes
                 HashKnownHosts              no
                 PreferredAuthentications    publickey
                 SendEnv                     TMUX_PANE

                 IdentityFile                ~/.ssh/home.id_rsa

            Host rasp*
                 User                        ubuntu
                 IdentityFile                ~/.ssh/hobby.id_rsa

            Host rpi-cm4*
                 User                        ubuntu
                 IdentityFile                ~/.ssh/hobby.id_rsa

        insertbefore: BOF
        create: yes

-   name: Create SSH ControlPath directory
    become: no
    file:
        path: ~/.ssh/mux
        state: directory

-   name: Setting Zsh
    become: no
    template:
        src: zsh/{{ item }}.j2
        dest: ~/.{{ item }}
    with_items:
    -   zshenv
    -   zshrc

-   name: Setting zplug
    become: no
    git:
        repo: https://github.com/zplug/zplug.git
        dest: .zplug

-   name: Settign Emacs (create directory)
    become: no
    file:
        path: ~/.emacs.d
        state: directory

-   name: Setting Emacs
    become: no
    template:
        src: emacs/init.el.j2
        dest: ~/.emacs.d/init.el

-   name: Settign Ruff (create directory)
    become: no
    file:
        path: ~/.config/ruff/
        recurse: true
        state: directory

-   name: Setting Ruff
    become: no
    template:
        src: ruff/ruff.toml.j2
        dest: ~/.config/ruff/ruff.toml

-   name: Settign Emacs for root (create directory)
    become: yes
    file:
        path: /root/.emacs.d
        state: directory
    when: root_config

-   name: Setting Emacs for root
    become: yes
    template:
        src: emacs/init.el.j2
        dest: /root/.emacs.d/init.el
    when: root_config

-   name: Setting Default Shell
    become: yes
    user:
        name: '{{ ansible_env.LOGNAME }}'
        shell: /usr/bin/zsh
    when: ansible_distribution == 'Ubuntu'

-   name: Setting Git
    become: no
    template:
        src: git/gitconfig.j2
        dest: ~/.gitconfig

-   name: Install Delta (x86)
    become: yes
    apt:
        deb: https://github.com/dandavison/delta/releases/download/0.17.0/git-delta_0.17.0_amd64.deb
        only_upgrade: true
    when: (ansible_distribution == 'Ubuntu') and (ansible_architecture == 'x86_64')

-   name: Install Delta (ARM)
    become: yes
    apt:
        deb: https://github.com/dandavison/delta/releases/download/0.17.0/git-delta_0.17.0_arm64.deb
        only_upgrade: true
    when: (ansible_distribution == 'Ubuntu') and (ansible_architecture == 'aarch64')

# Local Variables:
# mode: yaml
# tab-width: 4
# End:
